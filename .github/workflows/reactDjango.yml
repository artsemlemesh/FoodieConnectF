name: Cypress Tests

on:
  push:
    branches:
      - main
  

jobs:
  cypress-run:
    runs-on: ubuntu-latest

    # services:
    #   postgres:
    #     image: postgres:15
    #     env:
    #       POSTGRES_USER: myuser
    #       POSTGRES_PASSWORD: mypassword
    #       POSTGRES_DB: mydatabase
    #     ports:
    #       - 5432:5432

    steps:
      # Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Set up Python and Install Dependencies
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Backend Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          python manage.py migrate
          python manage.py collectstatic --noinput
        # env:
        #   DATABASE_URL: postgres://myuser:mypassword@localhost:5432/mydatabase
          
      # Step 3: Start Django Backend with Daphne
      - name: Start Backend Server
        run: |
          source venv/bin/activate
          daphne -b 0.0.0.0 -p 8000 backend.asgi:application &
        # env:
        #   DATABASE_URL: postgres://myuser:mypassword@localhost:5432/mydatabase

      # Step 4: Set up Node.js and Install Frontend Dependencies
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install Frontend Dependencies
        run: yarn install
        working-directory: frontend

      # Step 5: Start React Frontend
      - name: Start React App
        run: yarn dev &
        working-directory: frontend
        env:
          CI: true  

      # # Step 6: Wait for Backend and Frontend to be Ready
      # - name: Install wait-on
      #   run: yarn add wait-on --dev
      #   working-directory: frontend

      # - name: Wait for Backend & Frontend
      #   run: yarn run wait-on http://localhost:3001/ http://localhost:8000/ --timeout 120000
      #   working-directory: frontend

      - name: Delay to Ensure App is Ready
        run: sleep 5 

      # Step 7: Run Cypress Tests
      - name: Run Cypress Tests
        run: yarn cypress run --headless
        working-directory: frontend

      # # Step 8: Upload Cypress Videos & Screenshots
      # - name: Upload Cypress Videos
      #   if: always()
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: cypress-videos
      #     path: frontend/cypress/videos/

      # - name: Upload Cypress Screenshots
      #   if: always()
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: cypress-screenshots
      #     path: frontend/cypress/screenshots/