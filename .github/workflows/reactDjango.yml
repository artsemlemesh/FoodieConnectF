name: Cypress Tests

on: 
  push:
    branches:
      - main  # Change to your default branch if needed
  pull_request:

jobs:
  cypress-run:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout the frontend repo
      - name: Checkout Frontend Code
        uses: actions/checkout@v4

      # 2️⃣ Checkout the backend repo
      - name: Checkout Backend Code
        run: |
          git clone -b main https://github.com/artsemlemesh/FoodieConnectB.git 

      # 3️⃣ Set up Python & Install Backend Dependencies (with Cache)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('FoodieConnectB/myproject/requirements.txt') }}-${{ hashFiles('FoodieConnectB/myproject/Pipfile', 'FoodieConnectB/myproject/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Backend Dependencies
        run: |
          cd FoodieConnectB/myproject
          python -m venv venv
          source venv/bin/activate
          pip install --cache-dir ~/.cache/pip -r requirements.txt
          python manage.py migrate

      # 4️⃣ Start Django Backend with Daphne
      - name: Start Backend with Daphne
        run: |
          cd FoodieConnectB/myproject
          source venv/bin/activate
          daphne -b 0.0.0.0 -p 8000 myproject.asgi:application &

      # 5️⃣ Wait for Backend to be Ready
      - name: Wait for Backend
        run: |
          sleep 10  # Wait for DB & backend to initialize
          curl --retry 10 --retry-delay 5 --retry-connrefused -I http://localhost:8000

      # 6️⃣ Set up Node.js & Cache Dependencies
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: yarn

      - name: Cache Node.js Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.yarn
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Frontend Dependencies
        run: yarn install --frozen-lockfile

      # 7️⃣ Start React App
      - name: Start React App
        run: yarn dev &
        env:
          CI: true  # Prevents Create React App from hanging in CI

      - name: Delay to Ensure App is Ready
        run: sleep 5 

      # 9️⃣ Run Cypress Tests
      - name: Run Cypress Tests
        run: yarn cypress run --headless

        # Store the video for later inspection
      - name: Upload Cypress Video
        uses: actions/upload-artifact@v4
        with:
          name: cypress-video
          path: cypress/videos/**/*.mp4